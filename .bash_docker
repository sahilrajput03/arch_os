
# # BASIC # #
#
# Remove an image and container using ids
# docker image rm IMAGE_ID__OR__IMAGE_NAME
# docker rm CONTAINER_ID__OR__CONTAINER_NAME

# start a stopped container
# docker start CONTAINER_ID/CONTAINER_NAME

# # # # # # #
# get your system architecture
alias getArchitecture='uname -m'

# Aliases from my back old windows days..
alias d-c-removeOne_with_id_or_name='docker rm'
alias d-c-removeOneForcefully_with_id_or_name='docker rm --force'
alias d-c-runCommandInside='docker exec'
alias d-c-stopOne_with_id_or_na='docker stop'
alias d-i-removeOne_with_RepoNames_or_ImageIds='docker rmi'
alias d-i-removeOneForcefully_with_RepoNames_or_ImageIds='docker rmi -f'
alias d-i-run_with_id_or_name='docker run'
alias d-i-run_with_id_or_name-Detached='docker run -d'
alias d-i-listAll='docker images'
alias d-c-listAllContainers='docker ps -as'
alias d-c-listAllContainers_Only_Ids='docker ps -aq'
alias d-c-listRunningContainers='docker ps -s'

d-c-removeAllForcefully(){
	if docker ps -aq | grep ""
	then
		docker rm -f $(docker ps -aq)
		echo "#My log: Successfully removed containers with above listed ids."
	else
		echo "#My Log: There are no containers."
	fi
}
d-c-removeAllGracefully(){
	if docker ps -aq | grep ""
	then
		docker rm $(docker ps -aq)
		echo "#My log: Successfully removed containers with above listed ids."
	else
		echo "#My Log: There are no containers."
	fi
}
d-c-killRunning(){
	if [ $(docker ps -q) ]; then
		docker kill $(docker ps -q)
	else
		echo "#My Log: No containers are running right now. ~ Unknown guy"
	fi
}
d-i-removeAllForcefully(){
	if [ "$(docker images -q)" ]; then
		docker rmi -f $(docker images -q)
		echo "#My Log: Removed all above images."
	else
		echo "#My Log: No images are present locally. ~ Unknown Guy"
	fi
}
d-i-removeAllGracefully(){
	if [ "$(docker images -q)" ]; then
		docker rmi $(docker images -q)
		echo "#My Log: Removed all above images."
	else
		echo "#My Log: No images are present locally. ~ Unknown Guy"
	fi
}
