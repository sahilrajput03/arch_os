
# Please keep this file sync manually with `github.com/sahilrajput03/config/blob/main/.bashrc`

alias d='docker'

# Get your system architecture
alias getArchitecture='uname -m'

# Aliases
alias dimg-listAll='docker images'

# In `docker ps`: 
# -a, --all			Show all containers (default shows just running)
# -q, --quiet		Only display container IDs
# -s, --size		Display total file sizes

alias dcon-listAll='docker ps -as'
alias dcon-listAllOnly_Ids='docker ps -aq'
alias dcon-listRunning='docker ps -s'

dcon-removeAllForcefully(){
	if docker ps -aq | grep ""
	then
		docker rm -f $(docker ps -aq)
		echo "#My log: Successfully removed containers with above listed ids."
	else
		echo "#My Log: There are no containers."
	fi
}
dcon-removeAllGracefully(){
	if docker ps -aq | grep ""
	then
		docker rm $(docker ps -aq)
		echo "#My log: Successfully removed containers with above listed ids."
	else
		echo "#My Log: There are no containers."
	fi
}
dcon-killAllRunning(){
	if [ $(docker ps -q) ]; then
		docker kill $(docker ps -q)
	else
		echo "#My Log: No containers are running right now. ~ Unknown guy"
	fi
}
dimg-removeAllForcefully(){
	if [ "$(docker images -q)" ]; then
		docker rmi -f $(docker images -q)
		echo "#My Log: Removed all above images."
	else
		echo "#My Log: No images are present locally. ~ Unknown Guy"
	fi
}
dimg-removeAllGracefully(){
	if [ "$(docker images -q)" ]; then
		docker rmi $(docker images -q)
		echo "#My Log: Removed all above images."
	else
		echo "#My Log: No images are present locally. ~ Unknown Guy"
	fi
}
