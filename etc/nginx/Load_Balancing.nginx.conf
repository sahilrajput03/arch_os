events {
	worker_connections 1024;
}

# Learn: Nginx uses works via a Unix socket file, you can access it as well.

http {
	# What is upstream keyword in nginx? Ans. https://stackoverflow.com/a/5877943/10012446
	# Define backend upstream block named `backend`
	upstream backend {
		# Below line specifies weight=5 means it will receive five times as many requests as the other servers defined in the upstream block.
		server 127.0.0.1:8080   weight=5;
		server 127.0.0.1:8123;
		# Below line specifies a Unix domain socket /tmp/backend3. This is a way for NGINX to communicate with a backend server via a Unix socket file.
		server unix:/tmp/backend3;
		# Below line defines a backup server backup1.example.com listening on port 8080. This server will only receive requests if all other non-backup servers are unavailable. The backup directive marks it as a backup server.
		server backup1.example.com:8080   backup;
		server backup2.example.com:8080   backup;
	}
	
	# Defines a server block that listens for incoming requests.
	server {
		listen 80;
		server_name localhost;
		# Configures NGINX to proxy all requests received at the root (/) to the backend servers defined in the upstream block named "backend". This means NGINX will forward incoming requests to one of the servers defined in the upstream block, applying any load balancing strategies specified there.
		location / {
			proxy_pass http://backend;
		}
	}
}
